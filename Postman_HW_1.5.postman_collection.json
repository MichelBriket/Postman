{
	"info": {
		"_postman_id": "49287173-1260-4250-8535-2975fef3d3e5",
		"name": "Postman_HW_1.5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var resp_data = JSON.parse(responseBody);\r",
							"//Спарсить request.\r",
							"var req_data = request.data;\r",
							"//var req = pm.request.url.query.toObject();\r",
							"\r",
							"//Статус код 200\r",
							"pm.test(\"Status code 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(\"Michel\");\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_data.age).to.eql(\"27\");\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(resp_data.salary).to.eql(500);\r",
							"});\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your name request\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Your age request\", function () {\r",
							"    pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Your salary request\", function () {\r",
							"    pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(resp_data.family);\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Your u_salary_1_5_year\", function (){\r",
							"    pm.expect(resp_data.family.u_salary_1_5_year).to.eql(req_data.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Michel",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"//Спарсить request.\r",
							"var resp_data = pm.response.json ();\r",
							"var req = pm.request.url.query.toObject ();\r",
							"//console.log(resp_data);\r",
							"//console.log(req);\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your name response = name request \", function () {\r",
							"    pm.expect(resp_data.name).to.eql(req.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Your age response = age request \", function () {\r",
							"    pm.expect(resp_data.age).to.eql(req.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Your salary response = salary request \", function () {\r",
							"    pm.expect(resp_data.salary).to.eql(+req.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(resp_data.family);\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Your dog have key name\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog).to.have.any.keys(\"name\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Your dog have key age\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog).to.have.any.keys(\"age\");\r",
							"});\r",
							"//Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"Your dog have name\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Your dog have age\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Michel&age=27&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Michel"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"//Спарсить request.\r",
							"var resp_data = pm.response.json ();\r",
							"var req = pm.request.url.query.toObject ();\r",
							"//console.log(resp_data);\r",
							"//console.log(req);\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your name response = request name\", function (){\r",
							"    pm.expect(resp_data.name).to.eql(req.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Your age response = request age\", function (){\r",
							"    pm.expect(resp_data.age).to.eql(+req.age);\r",
							"});\r",
							"//Вывести в консоль параметр salary из request.\r",
							"console.log(req.salary);\r",
							"//Вывести в консоль параметр salary из response.\r",
							"console.log(resp_data.salary);\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(resp_data.salary[0]);\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(resp_data.salary[1]);\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(resp_data.salary[2]);\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Your salary = 500\", function (){\r",
							"    pm.expect(resp_data.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Your salary = 500*2\", function (){\r",
							"    pm.expect(+resp_data.salary[1]).to.eql(req.salary*2);\r",
							"});\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Your salary = 500*3\", function (){\r",
							"    pm.expect(+resp_data.salary[2]).to.eql(req.salary*3);\r",
							"});\r",
							"//Передать в окружение переменную name\r",
							"pm.environment.set(\"Name\", req.name);\r",
							"//Передать в окружение переменную age\r",
							"pm.environment.set(\"Age\", req.age);\r",
							"//Передать в окружение переменную salary\r",
							"pm.environment.set(\"Salary\", req.salary);\r",
							"//1.Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var sal = resp_data.salary;\r",
							"\r",
							"for (let i of sal){\r",
							"    console.log(\"salary = \", i);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Michel&age=27&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Michel"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Вставить параметр salary из окружения в request\r",
							"// Вставить параметр salary из окружения в age\r",
							"// Вставить параметр salary из окружения в name\r",
							"//Спарсить response body в json.\r",
							"var resp_data = JSON.parse(responseBody);\r",
							"//Спарсить request.\r",
							"var req_data = request.data;\r",
							"//Статус код 200\r",
							"pm.test(\"Status code 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp_data).to.have.any.keys(\"start_qa_salary\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_data).to.have.any.keys(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_data).to.have.any.keys(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_data).to.have.any.keys(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр person\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(resp_data).to.have.any.keys(\"person\");\r",
							"});\r",
							"//Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary = salary\", function (){\r",
							"    pm.expect(resp_data.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months = salary*2\", function (){\r",
							"    pm.expect(resp_data.qa_salary_after_6_months).to.eql(+req_data.salary*2);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7\", function (){\r",
							"    pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.3\", function (){\r",
							"    pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"// // //Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.3\", function (){\r",
							"    pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"//Проверить, что в параметре person, 1-й элемент из u_name равен name из request (salary забрать из request.)\r",
							"pm.test(\"person[0] = name\", function (){\r",
							"    pm.expect(resp_data.person.u_name[0]).to.eql(req_data.name);\r",
							"});\r",
							"//Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"u_age = age\", function (){\r",
							"    pm.expect(resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years = salary*4.2\", function (){\r",
							"    pm.expect(resp_data.person.u_salary_5_years).to.eql(+req_data.salary*4.2);\r",
							"});\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var per = resp_data.person;\r",
							"for (var i in per){\r",
							"    console.log(i + \": \" + per[i]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{Age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}